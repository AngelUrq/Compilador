PROGRAM,start ID : BODY final
BODY,juice xmain : void -> tint { EXPRESION RETORNO } EXTRA
RETORNO,give VALOR !
EXTRA,FUNCTION
EXTRA,€
FUNCTION,juice ID : ARGS -> FTYPE { EXPRESION RETORNO } EXTRA
ARGS,void
ARGS,TYPE ID ARGS2
ARGS2,coma ARGS
ARGS2,€
FTYPE,void
FTYPE,TYPE
TYPE,tint
TYPE,tbool
TYPE,tfloat
TYPE,tchar
ID,xid
ID,xvar
ID,xvar1
ID,xvar2
ID,xvar3
ID,xvar4
ID,xvar5
ID,xvar6
ID,xvar7
ID,xfun
ID,xfun1
ID,xfun2
ID,xfun3
ID,xfun4
ID,xfun5
ID,xfun6
ID,xfun7
EXPRESION,DECLARACION
EXPRESION,CICLO
EXPRESION,CONDICIONAL
EXPRESION,€
DECLARACION,TYPE ID = VALOR ! EXPRESION
CICLO,agane ( CONDICION ) { EXPRESION } EXPRESION
CONDICION,BOOL
CONDICION,VALOR OPERADOR VALOR
CONDICION,not ( CONDICION )
VALOR,BOOL
VALOR,NUM
VALOR,CARACTER
VALOR,ID
VALOR,EXP
BOOL,true
BOOL,false
OPERADOR,and
OPERADOR,or
OPERADOR,equals
OPERADOR,bigger
OPERADOR,lower
OPERADOR,biggerOrEqual
OPERADOR,lowerOrEqual
OPERACION,EXP
EXP,EXP2 EXP1
EXP1,+ EXP2 EXP1
EXP1,- EXP2 EXP1
EXP2,EXP3 EXP4
EXP4,* EXP3 EXP4
EXP4,/ EXP3 EXP4
EXP3,NUM
EXP1,€
EXP4,€
NUM,0
NUM,1
NUM,2
NUM,3
NUM,4
NUM,5
NUM,6
NUM,7
NUM,8
NUM,9
CARACTER,' LETRA '
LETRA,a
LETRA,b
LETRA,c
LETRA,d
LETRA,e
LETRA,f
LETRA,g
LETRA,h
LETRA,i
LETRA,j
LETRA,k
LETRA,l
LETRA,m
LETRA,n
LETRA,o
LETRA,p
LETRA,q
LETRA,r
LETRA,s
LETRA,t
LETRA,u
LETRA,v
LETRA,w
LETRA,x
LETRA,y
LETRA,z